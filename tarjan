int scc, low[maxn], num[maxn], deleted[maxn];
vi g[maxn];
stack<int> st;
namespace tarjan
{
	int timeDfs = 0;
    void dfs(int u)
    {
        num[u] = low[u] = ++timeDfs;
        st.push(u);
        for (int v : g[u])
        {
            if (deleted[v]) continue;
            if (!num[v])
            {
                dfs(v);
                low[u] = min(low[u], low[v]);
            }
            else low[u] = min(low[u], num[v]);
        }
        if (low[u] == num[u])
        {
            scc++;
            int v;
            do
            {
                v = st.top();
                st.pop();
                deleted[v] = true;
            }
            while (v != u);
        }
    }
    void init()
    {
    	fore(i, 1, n) if (!num[i]) dfs(i, i);
    }
};
